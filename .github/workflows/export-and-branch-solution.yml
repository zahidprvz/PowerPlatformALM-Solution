name: export-and-branch-solution

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to export'
        required: true
      solution_exported_folder:
        description: 'Folder to store the exported solution zip'
        default: 'out/exported'
      solution_folder:
        description: 'Folder to unpack the solution'
        default: 'out/solutions'
      solution_target_folder:
        description: 'Folder to commit solution into'
        default: 'solutions'
      managed_folder:
        description: 'Folder to store managed zips for deployment'
        default: 'out/managed'

env:
  ENVIRONMENT_URL: ${{ secrets.ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  GITTOKEN: ${{ secrets.GITTOKEN }}

jobs:
  export-from-dev:
    runs-on: windows-latest
    timeout-minutes: 720

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Ensure folders exist
        run: |
          mkdir -p "${{ github.event.inputs.solution_exported_folder }}"
          mkdir -p "${{ github.event.inputs.solution_folder }}"
          mkdir -p "${{ github.event.inputs.solution_target_folder }}"
          mkdir -p "${{ github.event.inputs.managed_folder }}"
        shell: pwsh

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Who Am I (Dev)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}

      - name: Export Solution (Unmanaged)
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder }}/${{ github.event.inputs.solution_name }}_Unmanaged.zip

      - name: Export Solution (Managed)
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.managed_folder }}/${{ github.event.inputs.solution_name }}_Managed.zip
          managed: true

      - name: Unpack Unmanaged Solution
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: ${{ github.event.inputs.solution_exported_folder }}/${{ github.event.inputs.solution_name }}_Unmanaged.zip
          solution-folder: ${{ github.event.inputs.solution_folder }}/${{ github.event.inputs.solution_name }}
          solution-type: 'Unmanaged'
          overwrite-files: true

      - name: Publish Solution in Dev
        uses: microsoft/powerplatform-actions/publish-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}

      - name: Commit Solution Source + Managed ZIP
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${{ github.event.inputs.solution_folder }}
          git add ${{ github.event.inputs.managed_folder }}
          git commit -m "Exported ${{ github.event.inputs.solution_name }} (unmanaged + managed)"
          git push
        env:
          GIT_TOKEN: ${{ env.GITTOKEN }}
        shell: pwsh
