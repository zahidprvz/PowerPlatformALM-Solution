name: export-and-branch-solution
# This workflow automates the export of an unmanaged solution from a
# development environment. It then unpacks the solution, creates both
# managed and unmanaged zip files, and pushes them to a new branch
# in the repository for source control.
on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to export'
        required: true
        default: Zyris
      solution_exported_folder:
        description: 'Folder for exported zip files'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Folder for unpacked solution (Unmanaged)'
        required: true
        default: out/solutions/
      solution_target_folder:
        description: 'Folder to commit to repository'
        required: true
        default: solutions/

env:
  ENVIRONMENT_URL: ${{ secrets.ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  TENANT_ID: ${{ secrets.TENANT_ID }}

permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    timeout-minutes: 720
    env:
      RUNNER_DEBUG: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Who Am I (Dev)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}

      - name: Export Unmanaged Solution
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip
          managed: false
          overwrite: true

      - name: Export Managed Solution
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Managed.zip
          managed: true
          overwrite: true

      - name: Unpack Unmanaged Solution
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip
          solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
          solution-type: Unmanaged
          overwrite-files: true

      - name: Publish Solution in Dev
        uses: microsoft/powerplatform-actions/publish-solution@v1
        with:
          environment-url: ${{ env.ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}

      - name: Commit Unpacked Solution and Zips
        uses: microsoft/powerplatform-actions/branch-solution@v1
        with:
          solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
          solution-target-folder: ${{ github.event.inputs.solution_target_folder }}${{ github.event.inputs.solution_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-empty-commit: true
          commit-message: 'feat: Exported solution ${{ github.event.inputs.solution_name }}'

      - name: Upload Unmanaged and Managed Zips
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.solution_name }}-zips
          path: ${{ github.event.inputs.solution_exported_folder }}
