name: export-and-branch-solution

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to export'
        required: true
        default: ITAuditHistoryV5
      solution_exported_folder:
        description: 'Folder for exported zips'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Folder for unpacked solution (Unmanaged)'
        required: true
        default: out/solutions/
      solution_target_folder: 
        description: 'Folder to commit to repo'
        required: true
        default: solutions/

permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITTOKEN }}
          lfs: true

      - name: Create required directories
        run: |
          New-Item -ItemType Directory -Force -Path "${{ github.event.inputs.solution_exported_folder }}" | Out-Null
          New-Item -ItemType Directory -Force -Path "${{ github.event.inputs.solution_folder }}" | Out-Null
          New-Item -ItemType Directory -Force -Path "${{ github.event.inputs.solution_target_folder }}" | Out-Null
          New-Item -ItemType Directory -Force -Path "out/managed" | Out-Null
        shell: pwsh

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Who Am I (Source Environment)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}

      - name: Export Solution (Unmanaged)
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip

      - name: Export Solution (Managed)
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ secrets.ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: out/managed/${{ github.event.inputs.solution_name }}_Managed.zip
          managed: true

      - name: Unpack Unmanaged Solution
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip
          solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
          solution-type: Unmanaged
          overwrite-files: true

      - name: Branch Solution
        uses: microsoft/powerplatform-actions/branch-solution@v1
        with:
          solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
          solution-target-folder: ${{ github.event.inputs.solution_target_folder }}${{ github.event.inputs.solution_name }}
          repo-token: ${{ secrets.GITTOKEN }}

      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Export solution ${{ github.event.inputs.solution_name }} - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" || echo "No changes to commit"
          git push
        shell: pwsh

      - name: Export Summary
        run: |
          Write-Host "âœ… Export completed successfully!"
          Write-Host "Solution: ${{ github.event.inputs.solution_name }}"
          Write-Host "Managed zip: out/managed/${{ github.event.inputs.solution_name }}_Managed.zip"
          Write-Host "Ready for deployment to target environment."
        shell: pwsh
