name: export-and-branch-solution
# Export solution from Dev environment,
# unpack it, prepare for PR, and commit Managed & Unmanaged zips

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to export'
        required: true
        default: Zyris
      solution_exported_folder:
        description: 'Folder for exported zips'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Folder for unpacked solution (Unmanaged)'
        required: true
        default: out/solutions/
      solution_target_folder: 
        description: 'Folder to commit to repo'
        required: true
        default: solutions/

env:
  ENVIRONMENT_URL: ${{ env.ENVIRONMENT_URL }}
  CLIENT_ID: ${{ env.CLIENT_ID }}
  TENANT_ID: ${{ env.TENANT_ID }}
  CLIENT_SECRET: ${{ env.CLIENT_SECRET }}

permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    timeout-minutes: 720
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Who Am I (Dev)
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: Export Solution (Unmanaged)
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip

    - name: Export Solution (Managed)
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Managed.zip
        managed: true

    - name: Unpack Unmanaged Solution
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Unmanaged.zip
        solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
        solution-type: Unmanaged
        overwrite-files: true

    - name: Publish Solution in Dev
      uses: microsoft/powerplatform-actions/publish-solution@v1
      with:
        environment-url: ${{ env.ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: Branch Solution (prepare for PR)
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        solution-folder: ${{ github.event.inputs.solution_folder }}${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder }}${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }} # Keep this as is â€” GitHub provides this automatically

    - name: Commit Managed Zip to Git
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add ${{ github.event.inputs.solution_exported_folder }}${{ github.event.inputs.solution_name }}_Managed.zip
        git commit -m "Add Managed solution zip for ${{ github.event.inputs.solution_name }}"
        git push
