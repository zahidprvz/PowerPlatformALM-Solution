name: deploy-solution-to-test

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to deploy'
        required: true
        default: ITAuditHistoryV5
      source_branch:
        description: 'Git branch to pick the solution from'
        required: true
        default: main

permissions:
  contents: read

jobs:
  deploy-to-test:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.source_branch }}
          token: ${{ secrets.GITTOKEN }}
          lfs: true

      - name: Verify solution file exists
        run: |
          $solutionPath = "out/managed/${{ github.event.inputs.solution_name }}_Managed.zip"
          if (-not (Test-Path $solutionPath)) {
            Write-Host "❌ Solution file not found: $solutionPath"
            Write-Host "Please run the export workflow first."
            exit 1
          }
          $fileSize = (Get-Item $solutionPath).Length
          Write-Host "✅ Found solution file: $solutionPath ($([math]::Round($fileSize/1MB, 2)) MB)"
        shell: pwsh

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Who Am I (Target Environment)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ secrets.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}

      - name: Import Managed Solution
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ secrets.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}
          solution-file: out/managed/${{ github.event.inputs.solution_name }}_Managed.zip
          force-overwrite: true
          activate-plugins: true

      - name: Publish Solution
        uses: microsoft/powerplatform-actions/publish-solution@v1
        with:
          environment-url: ${{ secrets.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          tenant-id: ${{ secrets.TENANT_ID }}

      - name: Deployment Summary
        run: |
          Write-Host "✅ Deployment completed successfully!"
          Write-Host "Solution: ${{ github.event.inputs.solution_name }}"
          Write-Host "Target: ${{ secrets.TARGET_ENVIRONMENT_URL }}"
          Write-Host "Deployed at: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        shell: pwsh
