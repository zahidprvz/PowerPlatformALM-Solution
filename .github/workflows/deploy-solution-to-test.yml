name: deploy-solution-to-test

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to deploy'
        required: true
        default: Zyris
      source_branch:
        description: 'Git branch to pick the solution from'
        required: true
        default: main

env:
  TARGET_ENVIRONMENT_URL: ${{ env.TARGET_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ env.CLIENT_ID }}
  TENANT_ID: ${{ env.TENANT_ID }}
  CLIENT_SECRET: ${{ env.CLIENT_SECRET }}

permissions:
  contents: write
  id-token: write

jobs:
  deploy-to-test:
    runs-on: windows-latest
    timeout-minutes: 720
    env:
      RUNNER_DEBUG: 1
    steps:
      - name: Checkout selected branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.source_branch }}
          lfs: true

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Who Am I (Test Environment)
        uses: microsoft/powerplatform-actions/who-am-i@v1
        with:
          environment-url: ${{ env.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}

      - name: Import Managed Solution to Test
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ env.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-file: ./out/exported/${{ github.event.inputs.solution_name }}_Managed.zip
          activate-plugins: true
          force-overwrite: false
          skip-dependency-check: false
          convert-to-managed: true

      - name: Publish Solution in Test
        uses: microsoft/powerplatform-actions/publish-solution@v1
        with:
          environment-url: ${{ env.TARGET_ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.CLIENT_SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
